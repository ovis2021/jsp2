



 1. build
 소스코드 작업부터 디버깅/구현하는 단계 그리고 실행할수 있는 결과물까지 만들어내는 과정.
소스코드 완료 -> jvm(일반애플리케이션) , 톰캣서버(웹애플리케이션)에서 실행할수 있도록 해야함.
-> 라이브러리, 이미지파일, xml 등등 실행에 필요한 파일을 하나의
결과물로 포함 -> 최종 애플리케이션 결과물을 생성하는 것.(결과물은 jar 또는 war 형식으로 배포)
 
 2.build 도구
빌드도구 : 다양한 외부라이브러리를 사용해서 애플리케이션을 구현합니다.
그 때  기존의 라이브러리 추가 방법 : WEB-INF 폴더  - lib 폴더에 가져오기
빌드도구를 이용하면 위의 방법보다 편하게 라이브러리를 관리할수 있습니다.
빌드 도구에는 maven(xml파일형식), gradle(json 형식) 등등이 있습니다.
자동 다운로드 -> 프로젝트에 포함

 
 3. maven 
 프로젝트 만드는 순서
 1) File = Dynamic web project
 2) jsp2프로젝트를 선택하고 오른쪽 클릭으로 열리는 메뉴 config - convert to maven project
 3) pom.xml (project object model) 파일이 생성됩니다. -> 이 파일에  사용할 라이브러리 설정
 -> 자동 다운로드 -> 프로젝트에 포함 *mvnrepository.com
 -> dependency 에 추가된 라이브러리 임포트 안될 때 *프로젝트 선택 - 오른쪽 버튼 메뉴 maven - update project
 
 4) 다운로드된 라이브러리 파일 위치 : C:\사용자\계정\.m2\repository
 (-> 간혹 라이브러리  임포트가 안될 떄 해당 폴더의 내용을 탐색기에서 직접 삭제하고 다시 다운로드 받도록 해야합니다.)
 
 
 
  xml에서 #{email} 안에 인자 map값이 들어가는거 같은데 키는 어디에 쓰나요 

 => put 메소드의 첫번째 인자가 key 입니다.

 

 put 메소드의 두번째 인자는 value

#{email} 이 map 객체의 email 키를 파라미터로 한다는 뜻이에요

정확히는 email 키의 value

 

 어제 딜리트하거나 셀렉트 하나만 할때는 그냥 인트값너서도 했는데 => 단일한 값일때는 타입으로 매칭이 가능해요

 

 단일한 값일때는 타입으로 매칭이 "가능해요" => 타입으로 매칭합니다.
 
 script 태그가 뒤에 있어야 요소를 가져올수 있습니다.
script 태그를 modal div 태그 뒤로 옮기세요
 
 